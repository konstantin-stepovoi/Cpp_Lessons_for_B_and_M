/*
Compile - only
Принципиальная схема работы компиллятора:

1) Проверка программы на соответствие правилам языка (проверка синтаксиса).
Если она будет неудачной,
то компилятор выдаст сообщения об ошибках, которые нужно будет исправить.

2) Конвертация каждого исходного файла
с кодом в объектный файл (или «объектный модуль») на машинном языке.

g++ -c file1.cpp file2.cpp file3.cpp

3) Линкинг — это процесс связывания всех объектных файлов, генерируемых компилятором,
в единую исполняемую программу, которую вы затем сможете запустить/выполнить

g++ -o prog file1.o file2.o file3.o

(рассказать как работает линкер и компилер)
А теперь давайте напишем первый код:
*/


/*
Компьютерная программа — это последовательность инструкций,
которые сообщают компьютеру, что ему нужно сделать.

Cтейтмент (англ. «statement») — это наиболее распространенный тип инструкций в программах.
Это и есть та самая инструкция, наименьшая независимая единица в языке
*/


#include <iostream>
// Это директива препроцессора с подключением стандартной библиотеки.
// Можно добавлять самые разные библиотеки, их много.


// Это функция. Функции отделены от остальной программы.

int square(int x) {
	return x * x;
}


int main() {
	int x = 7; // Это пример простейшего стейтмента (инструкции)
	std::cout << "x = " << x << std::endl; // Это тоже стейтмент
	std::cout << "Hello, world! Lets start suffering)" << std::endl;
	
	int y = 12;
	x = x + 8 + y; //Это уже выражение (expression)
	//это математический объект, который создается (составляется) для проведения вычислений
	int q = square(x); // Это стейтмент, но он содержит вызов функции
	std::cout << q << std::endl;

	return 0;
}



/*
Тут надо оговориться, что все программы будут разбиты на 
проекты. Это особенность VStudio, Ниче не поделать.
*/