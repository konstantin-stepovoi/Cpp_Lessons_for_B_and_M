/*
Большинство конфликтов имен происходят в двух случаях:

Файлы, добавленные в один проект, имеют функцию (или глобальную переменную) 
с одинаковыми именами (ошибка на этапе линкинга).

Файл .cpp подключает заголовочный файл, в котором идентификатор конфликтует 
с идентификатором из файла .cpp (ошибка на этапе компиляции).

C++ предоставляет достаточно механизмов для предотвращения возникновения конфликтов
имен (например, локальная область видимости или пространства имен).
*/


#include <iostream>

// Создаем собственное пространство имён
namespace MathOperations {
    int add(int a, int b) {
        return a + b;
    }

    int subtract(int a, int b) {
        return a - b;
    }

    namespace Advanced {
        int multiply(int a, int b) {
            return a * b;
        }
    }
}

int main() {
    // Используем функции через имя пространства имён
    // Более того, уже на этом этапе мы через :: разрешаем использовать cout из пространства std

    std::cout << "3 + 4 = " << MathOperations::add(3, 4) << std::endl;
    std::cout << "7 - 2 = " << MathOperations::subtract(7, 2) << std::endl;
    std::cout << "5 * 6 = " << MathOperations::Advanced::multiply(5, 6) << std::endl;

    return 0;
}
